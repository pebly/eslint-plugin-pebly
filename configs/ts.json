{
  "overrides": [
    {
      "extends": "plugin:@typescript-eslint/eslint-recommended",
      "files": "*.ts"
    },
    {
      "extends": "plugin:@typescript-eslint/disable-type-checked",
      "files": "*.vue"
    }
  ],
  "rules": {
    "@typescript-eslint/array-type": [
      "error",
      { "default": "array", "readonly": "array" }
    ],
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "minimumDescriptionLength": 2,
        "ts-check": false,
        "ts-expect-error": true,
        "ts-ignore": true,
        "ts-nocheck": true
      }
    ],
    "@typescript-eslint/ban-types": ["error", { "extendDefaults": true }],
    "@typescript-eslint/class-literal-property-style": ["error", "fields"],
    "@typescript-eslint/consistent-generic-constructors": [
      "error",
      "constructor"
    ],
    "@typescript-eslint/consistent-indexed-object-style": ["error", "record"],
    "@typescript-eslint/consistent-type-assertions": [
      "error",
      {
        "assertionStyle": "angle-bracket",
        "objectLiteralTypeAssertions": "allow"
      }
    ],
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/consistent-type-exports": [
      "error",
      { "fixMixedExportsWithInlineTypeSpecifier": false }
    ],
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "disallowTypeAnnotations": true,
        "fixStyle": "separate-type-imports",
        "prefer": "type-imports"
      }
    ],
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowConciseArrowFunctionExpressionsStartingWithVoid": false,
        "allowDirectConstAssertionInArrowFunctions": true,
        "allowExpressions": false,
        "allowFunctionsWithoutTypeParameters": false,
        "allowHigherOrderFunctions": true,
        "allowIIFEs": false,
        "allowTypedFunctionExpressions": true
      }
    ],
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      { "accessibility": "explicit" }
    ],
    "@typescript-eslint/explicit-module-boundary-types": [
      "error",
      {
        "allowArgumentsExplicitlyTypedAsAny": false,
        "allowDirectConstAssertionInArrowFunctions": true,
        "allowHigherOrderFunctions": true,
        "allowTypedFunctionExpressions": true
      }
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      { "default": { "order": "natural" } }
    ],
    "@typescript-eslint/method-signature-style": ["error", "property"],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "filter": { "regex": "\\d+", "match": false },
        "format": ["camelCase"],
        "selector": "property"
      }
    ],
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-confusing-void-expression": [
      "error",
      { "ignoreArrowShorthand": false, "ignoreVoidOperator": false }
    ],
    "@typescript-eslint/no-duplicate-type-constituents": [
      "error",
      { "ignoreIntersections": false, "ignoreUnions": false }
    ],
    "@typescript-eslint/no-empty-interface": [
      "error",
      { "allowSingleExtends": false }
    ],
    "@typescript-eslint/no-explicit-any": [
      "error",
      { "fixToUnknown": false, "ignoreRestArgs": false }
    ],
    "@typescript-eslint/no-extraneous-class": [
      "error",
      {
        "allowConstructorOnly": false,
        "allowEmpty": false,
        "allowStaticOnly": false,
        "allowWithDecorator": false
      }
    ],
    "@typescript-eslint/no-floating-promises": [
      "error",
      { "ignoreIIFE": false, "ignoreVoid": false }
    ],
    "@typescript-eslint/no-inferrable-types": [
      "error",
      { "ignoreParameters": false, "ignoreProperties": false }
    ],
    "@typescript-eslint/no-invalid-void-type": [
      "error",
      { "allowAsThisParameter": false, "allowInGenericTypeArguments": false }
    ],
    "@typescript-eslint/no-meaningless-void-operator": [
      "error",
      { "checkNever": true }
    ],
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksConditionals": true,
        "checksSpreads": true,
        "checksVoidReturn": true
      }
    ],
    "@typescript-eslint/no-namespace": [
      "error",
      { "allowDeclarations": false, "allowDefinitionFiles": false }
    ],
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": [
      "error",
      { "allowDestructuring": false }
    ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": [
      "error",
      {
        "allowComparingNullableBooleansToTrue": false,
        "allowComparingNullableBooleansToFalse": false
      }
    ],
    "@typescript-eslint/no-unnecessary-condition": [
      "error",
      {
        "allowConstantLoopConditions": false,
        "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false
      }
    ],
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/parameter-properties": [
      "error",
      { "prefer": "class-property" }
    ],
    "@typescript-eslint/prefer-literal-enum-member": [
      "error",
      { "allowBitwiseExpressions": false }
    ],
    "@typescript-eslint/prefer-nullish-coalescing": [
      "error",
      {
        "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false,
        "ignoreConditionalTests": false,
        "ignoreMixedLogicalExpressions": false,
        "ignorePrimitives": {
          "bigint": false,
          "boolean": false,
          "number": false,
          "string": false
        },
        "ignoreTernaryTests": false
      }
    ],
    "@typescript-eslint/prefer-optional-chain": [
      "error",
      {
        "allowPotentiallyUnsafeFixesThatModifyTheReturnTypeIKnowWhatImDoing": false,
        "checkAny": true,
        "checkBigInt": true,
        "checkBoolean": true,
        "checkNumber": true,
        "checkString": true,
        "checkUnknown": true,
        "requireNullish": false
      }
    ],
    "@typescript-eslint/prefer-readonly": [
      "error",
      { "onlyInlineLambdas": false }
    ],
    "@typescript-eslint/prefer-readonly-parameter-types": "off",
    "@typescript-eslint/prefer-string-starts-ends-with": [
      "error",
      { "allowSingleElementEquality": "never" }
    ],
    "@typescript-eslint/promise-function-async": [
      "error",
      {
        "allowAny": false,
        "checkArrowFunctions": true,
        "checkFunctionDeclarations": true,
        "checkFunctionExpressions": true,
        "checkMethodDeclarations": true
      }
    ],
    "@typescript-eslint/require-array-sort-compare": [
      "error",
      { "ignoreStringArrays": false }
    ],
    "@typescript-eslint/restrict-plus-operands": [
      "error",
      {
        "allowAny": false,
        "allowBoolean": false,
        "allowNullish": false,
        "allowNumberAndString": false,
        "allowRegExp": false,
        "skipCompoundAssignments": false
      }
    ],
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      {
        "allowAny": false,
        "allowBoolean": false,
        "allowNullish": false,
        "allowNumber": false,
        "allowRegExp": false
      }
    ],
    "@typescript-eslint/sort-type-constituents": [
      "error",
      { "checkIntersections": true, "checkUnions": true }
    ],
    "@typescript-eslint/strict-boolean-expressions": [
      "error",
      {
        "allowAny": false,
        "allowNullableBoolean": false,
        "allowNullableEnum": false,
        "allowNullableNumber": false,
        "allowNullableObject": false,
        "allowNullableString": false,
        "allowNumber": false,
        "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": false,
        "allowString": false
      }
    ],
    "@typescript-eslint/switch-exhaustiveness-check": [
      "error",
      {
        "allowDefaultCaseForExhaustiveSwitch": false,
        "requireDefaultForNonUnion": true
      }
    ],
    "@typescript-eslint/triple-slash-reference": [
      "error",
      { "lib": "never", "path": "never", "types": "never" }
    ],
    "@typescript-eslint/typedef": [
      "error",
      {
        "arrayDestructuring": false,
        "arrowParameter": false,
        "memberVariableDeclaration": false,
        "objectDestructuring": false,
        "parameter": false,
        "propertyDeclaration": false,
        "variableDeclaration": false,
        "variableDeclarationIgnoreFunction": false
      }
    ],
    "@typescript-eslint/unbound-method": ["error", { "ignoreStatic": false }],
    "@typescript-eslint/unified-signatures": [
      "error",
      { "ignoreDifferentlyNamedParameters": false }
    ]
  }
}
